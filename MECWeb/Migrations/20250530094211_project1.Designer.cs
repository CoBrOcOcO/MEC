// <auto-generated />
using System;
using MECWeb.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MECWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250530094211_project1")]
    partial class project1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MECWeb.DbModels.Machine.DbMachine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("mec_machine");
                });

            modelBuilder.Entity("MECWeb.DbModels.Project.DbProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectNumber")
                        .IsUnique();

                    b.ToTable("mec_project");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateDictionary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("mec_translate_dictionary");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DictionaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.ToTable("mec_translate_entry");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalItemsCount")
                        .HasColumnType("int");

                    b.Property<int>("TranslatedItemsCount")
                        .HasColumnType("int");

                    b.Property<int>("TranslationFileType")
                        .HasColumnType("int");

                    b.Property<int>("TranslationService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("mec_translate_project");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Value")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("mec_translate_translation");
                });

            modelBuilder.Entity("MECWeb.DbModels.User.DbUser", b =>
                {
                    b.Property<Guid>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UId");

                    b.ToTable("mec_user");
                });

            modelBuilder.Entity("MECWeb.DbModels.User.DbUserProject", b =>
                {
                    b.Property<Guid>("DbUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DbProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DbUserId", "DbProjectId");

                    b.HasIndex("DbProjectId");

                    b.ToTable("mec_user_project");
                });

            modelBuilder.Entity("MECWeb.DbModels.User.DbUserProjectFavorite", b =>
                {
                    b.Property<Guid>("DbUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DbProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DbUserId", "DbProjectId");

                    b.HasIndex("DbProjectId");

                    b.ToTable("mec_user_project_favorite");
                });

            modelBuilder.Entity("MECWeb.DbModels.Machine.DbMachine", b =>
                {
                    b.HasOne("MECWeb.DbModels.Project.DbProject", "Project")
                        .WithMany("Machines")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateEntry", b =>
                {
                    b.HasOne("MECWeb.DbModels.Translate.DbTranslateDictionary", "Dictionary")
                        .WithMany("Entries")
                        .HasForeignKey("DictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dictionary");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateProject", b =>
                {
                    b.HasOne("MECWeb.DbModels.Project.DbProject", "Project")
                        .WithMany("TranslateProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateTranslation", b =>
                {
                    b.HasOne("MECWeb.DbModels.Translate.DbTranslateEntry", "Entry")
                        .WithMany("Translations")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("MECWeb.DbModels.User.DbUserProject", b =>
                {
                    b.HasOne("MECWeb.DbModels.Project.DbProject", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("DbProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MECWeb.DbModels.User.DbUser", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("DbUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MECWeb.DbModels.User.DbUserProjectFavorite", b =>
                {
                    b.HasOne("MECWeb.DbModels.Project.DbProject", "Project")
                        .WithMany("UserProjectFavorites")
                        .HasForeignKey("DbProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MECWeb.DbModels.User.DbUser", "User")
                        .WithMany("UserProjectFavorites")
                        .HasForeignKey("DbUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MECWeb.DbModels.Project.DbProject", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("TranslateProjects");

                    b.Navigation("UserProjectFavorites");

                    b.Navigation("UserProjects");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateDictionary", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("MECWeb.DbModels.Translate.DbTranslateEntry", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("MECWeb.DbModels.User.DbUser", b =>
                {
                    b.Navigation("UserProjectFavorites");

                    b.Navigation("UserProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
